apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'bugly'

def packageName = "com.yunxiao.testapplication"

android {
    compileSdkVersion 29
    buildToolsVersion "28.0.3"

    signingConfigs {
        release {
            storeFile file("aifudao_keystore")
            storePassword "aifudao"
            keyAlias "aifudao"
            keyPassword "aifudao"
            v2SigningEnabled true
        }
    }
    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
    }

    defaultConfig {
        applicationId packageName
        minSdkVersion 16
        targetSdkVersion 28
        versionCode getVersionCodeByName(app_version)
        versionName app_version
        multiDexEnabled true
        signingConfig signingConfigs.release

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BUGLY_APPID", "\"${BUGLY_RELEASE_ID}\""
            manifestPlaceholders = [
                    appIcon: "@mipmap/logo"
            ]
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
        releaseTest {
            versionNameSuffix "-test"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BUGLY_APPID", "\"${BUGLY_RELEASETEST_ID}\""
            manifestPlaceholders = [
                    appIcon: "@mipmap/logo_releasetest"
            ]
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            minifyEnabled false
            buildConfigField "String", "BUGLY_APPID", "\"${BUGLY_RELEASETEST_ID}\""
            manifestPlaceholders = [
                    appIcon: "@mipmap/logo_debug"
            ]
            ndk {
                abiFilters 'armeabi-v7a', 'x86'
            }
        }
    }
    applicationVariants.all { variant ->
        //bugly自动上次mapping
        if (variant.buildType.name == "release") {
            variant.ext.buglyAppId = BUGLY_RELEASE_ID
            variant.ext.buglyAppKey = BUGLY_RELEASE_KEY
        } else if (variant.buildType.name == "releaseTest") {
            variant.ext.buglyAppId = BUGLY_RELEASETEST_ID
            variant.ext.buglyAppKey = BUGLY_RELEASETEST_KEY
            variant.ext.buglyAppVersion = "${defaultConfig.versionName}-test"
        }
        //生成apk名
        variant.outputs.all { output ->
            outputFileName = variant.baseName + "_" + defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

bugly {
    debug = true
    appPackage = packageName
    appVersion = app_version
    appChannel = ""
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


def getVersionCodeByName(String versionName) {
    String[] versions = versionName.split("\\.")
    int a = Integer.valueOf(versions[0]).intValue()
    int b = Integer.valueOf(versions[1]).intValue()
    int c = Integer.valueOf(versions[2]).intValue()
    int d = 0
    if (versions.length > 3) {
        d = Integer.valueOf(versions[3]).intValue()
    }
    return (a * (2 << 15) + b * (2 << 7) + c) * 10 + d
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // Modules
    implementation project(':library')
    // ARouter
    kapt "com.alibaba:arouter-compiler:$arouter_compiler"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}